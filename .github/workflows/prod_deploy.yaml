name: Update Version

on:
  push:
    branches: [ main ]

jobs:
  flutter_test:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - run: flutter --version
      - run: flutter test

  update-version:
    needs: flutter_test
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          # 버전 업데이트를 위해 write 권한 필요
          token: ${{ secrets.MY_GITHUB_TOKEN }}

      # commit message에서 버전 업데이트 전략 추출
      - name: Determine version strategy
        id: version_strategy
        run: |
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          if [[ $COMMIT_MSG =~ \[strategy=major\] ]]; then
            echo "STRATEGY=major" >> $GITHUB_ENV
          elif [[ $COMMIT_MSG =~ \[strategy=minor\] ]]; then
            echo "STRATEGY=minor" >> $GITHUB_ENV
          else
            echo "STRATEGY=patch" >> $GITHUB_ENV
          fi
          echo "Selected strategy: $STRATEGY"

      # pubspec.yaml 버전 업데이트
      - name: Update pubspec version
        uses: stikkyapp/update-pubspec-version@v2
        with:
          strategy: ${{ env.STRATEGY }}  # major, minor, patch 중 선택
          bump-build: true   # build 번호도 증가
          path: './pubspec.yaml'

      # grep 으로 패턴 검색하고, sed로 문자열 변경
      - name: Get updated version
        id: get_version
        run: |
          VERSION=$(grep 'version:' pubspec.yaml | sed 's/version: //')
          echo "NEW_VERSION=$VERSION" >> $GITHUB_ENV
          echo "Updated Version: $NEW_VERSION

      # 변경사항 커밋 & 푸시
      - name: Commit and push changes
        run: |
          git config --local user.email "github-actions@github.com"
          git config --local user.name "github-actions"
          git add pubspec.yaml
          git commit -m "chore: Bump version to ${NEW_VERSION} [skip ci]"
          git push