name: Production Deploy

on:
  pull_request:
    types: [ closed ]
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  # Android 배포
#  android_deploy:
#    runs-on: macos-latest
#    steps:
#      - name: Clone repository
#        uses: actions/checkout@v4
#
#      - name: Install Ruby
#        uses: ruby/setup-ruby@v1
#        with:
#          ruby-version: '3.3'
#
#      - name: Install Java17
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin'
#          java-version: '17'
#
#      - name: Install Fastlane
#        run: |
#          brew install fastlane
#
#      - name: Install Flutter
#        uses: subosito/flutter-action@v2
#        with:
#          channel: stable
#          flutter-version: '3.27.1'
#
#      - run: flutter --version
#      - run: flutter pub get
#      - run: flutter pub run build_runner build --delete-conflicting-outputs
#
#      - name: Build AppBundle
#        run: flutter build appbundle --release --flavor prod -t lib/app/config/env/prod.dart --no-tree-shake-icons
#
#      # 배포
#      - name: fastlane internal upload
#        env:
#          ANDROID_JSON_KEY: ${{ secrets.ANDROID_JSON_KEY }}
#        run: |
#          cd android
#          fastlane prod_deploy
#

  # iOS 배포
  ios_deploy:
    runs-on: macos-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'

#      - name: Install Java17
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin'
#          java-version: '17'

      - name: Install Fastlane
        run: |
          brew install fastlane

#      - name: Install Flutter
#        uses: subosito/flutter-action@v2
#        with:
#          channel: stable
#          flutter-version: '3.27.1'
#
#      - run: flutter --version
#      - run: flutter pub get
#      - run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Generate Basic Auth
        id: auth
        run: |
          AUTH=$(echo -n "${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}" | base64)
          echo "::set-output name=basic_auth::$AUTH"

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Test Git SSH Access
        run: |
          echo "Testing SSH agent..."
          ssh-add -l

          echo ""
          echo ""
          echo "Testing SSH connection to GitHub..."
          ssh -vT git@github.com

          echo "Testing repository access..."
          git ls-remote git@github.com:Younggun-Kim/PhsicalNote_iOS_fastlane_match.git

          echo "Testing clone..."
          git clone git@github.com:Younggun-Kim/PhsicalNote_iOS_fastlane_match.git test_clone

          echo "Listing cloned directory..."
          ls -la test_clone

      # 배포
      - name: Fastlane internal upload
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
          APPSTORE_TEAM_ID: ${{ secrets.APPSTORE_TEAM_ID }}
          APPSTORE_ITC_TEAM_ID: ${{ secrets.APPSTORE_ITC_TEAM_ID }}
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
          MATCH_PASSWORD: ${{ secrets.MATCH_KEYCHAIN_PASSWORD }}
          MATCH_KEYCHAIN_PASSWORD: ${{ secrets.MATCH_KEYCHAIN_PASSWORD }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ steps.auth.outputs.basic_auth }}
#          MATCH_GIT_PRIVATE_KEY: ${{ secrets.MATCH_GIT_PRIVATE_KEY }}
        run: |
          cd ios
          fastlane release
